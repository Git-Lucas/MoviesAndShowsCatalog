// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesAndShowsCatalog.User.Infrastructure.Data;

#nullable disable

namespace MoviesAndShowsCatalog.User.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MoviesAndShowsCatalog.User.Domain.Notifications.Entities.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("MoviesAndShowsCatalog.User.Domain.Users.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GenrePreferences")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenrePreferences = "",
                            Password = "AQAAAAIAAYagAAAAEOH8C7EC030bk6itGAXNQcRDMOcNYtiKYZp4EzeI12Zq6kOBdC2qIPeP3mUgqZcl+A==",
                            Role = 1,
                            Username = "administrador"
                        },
                        new
                        {
                            Id = 2,
                            GenrePreferences = "Action,ScienceFiction",
                            Password = "AQAAAAIAAYagAAAAEFjT+mfY9mXm0rAkEHo2T5ju0W3JBRFyYSFzhIPaXVUo8OiuyC86UbVYrqTzSX8IXg==",
                            Role = 0,
                            Username = "lucas"
                        },
                        new
                        {
                            Id = 3,
                            GenrePreferences = "Comedy,Adventure",
                            Password = "AQAAAAIAAYagAAAAEAyKJYCmG6f7E/5MmM/7E0MKSjEoNFTcp+x77gG18lVukfP4JjyhU48H3w6M1NppqA==",
                            Role = 0,
                            Username = "joão"
                        },
                        new
                        {
                            Id = 4,
                            GenrePreferences = "Action,Fantasy,Romance",
                            Password = "AQAAAAIAAYagAAAAEAbpYOwKD0NlxbzGRhKYNm3nNxJN6t92ksA80aMdJ+134gyfD08c9dtyyBsEYSv+tA==",
                            Role = 0,
                            Username = "maria"
                        },
                        new
                        {
                            Id = 5,
                            GenrePreferences = "Animation,Documentary",
                            Password = "AQAAAAIAAYagAAAAEBHSfqJgFy4dqwRDDEIQwWJuRGgk6iuP1plQ5iTp0aZX1txOBILwgSpiK1WwWfUtbQ==",
                            Role = 0,
                            Username = "carlos"
                        });
                });

            modelBuilder.Entity("MoviesAndShowsCatalog.User.Domain.Notifications.Entities.Notification", b =>
                {
                    b.HasOne("MoviesAndShowsCatalog.User.Domain.Users.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
