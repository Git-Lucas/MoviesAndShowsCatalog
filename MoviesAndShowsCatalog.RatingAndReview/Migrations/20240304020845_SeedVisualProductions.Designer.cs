// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesAndShowsCatalog.RatingAndReview.Infrastructure.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MoviesAndShowsCatalog.RatingAndReview.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240304020845_SeedVisualProductions")]
    partial class SeedVisualProductions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MoviesAndShowsCatalog.RatingAndReview.Domain.Entities.RatingAndReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VisualProductionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VisualProductionId");

                    b.ToTable("RatingsAndReviews");
                });

            modelBuilder.Entity("MoviesAndShowsCatalog.RatingAndReview.Domain.Entities.VisualProduction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Genre")
                        .HasColumnType("integer");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("VisualProductions");
                });

            modelBuilder.Entity("MoviesAndShowsCatalog.RatingAndReview.Domain.Entities.RatingAndReview", b =>
                {
                    b.HasOne("MoviesAndShowsCatalog.RatingAndReview.Domain.Entities.VisualProduction", "VisualProduction")
                        .WithMany()
                        .HasForeignKey("VisualProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("MoviesAndShowsCatalog.RatingAndReview.Domain.ValueObjects.Rating", "Rating", b1 =>
                        {
                            b1.Property<int>("RatingAndReviewId")
                                .HasColumnType("integer");

                            b1.Property<float>("Value")
                                .HasColumnType("real")
                                .HasColumnName("Rating");

                            b1.HasKey("RatingAndReviewId");

                            b1.ToTable("RatingsAndReviews");

                            b1.WithOwner()
                                .HasForeignKey("RatingAndReviewId");
                        });

                    b.Navigation("Rating")
                        .IsRequired();

                    b.Navigation("VisualProduction");
                });
#pragma warning restore 612, 618
        }
    }
}
